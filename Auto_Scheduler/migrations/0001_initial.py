# Generated by Django 3.0.2 on 2020-03-01 18:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('course_code', models.CharField(default=None, max_length=100)),
                ('course_name', models.CharField(default=None, max_length=100)),
                ('course_capacity', models.IntegerField(default=None, max_length=100)),
            ],
            options={
                'db_table': 'Courses',
            },
        ),
        migrations.CreateModel(
            name='Day_Time',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('day_time', models.CharField(default=None, max_length=200)),
            ],
            options={
                'db_table': 'Day_Time',
            },
        ),
        migrations.CreateModel(
            name='Days',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('day_name', models.CharField(default=None, max_length=100)),
            ],
            options={
                'db_table': 'Days',
            },
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='General', max_length=200)),
            ],
            options={
                'db_table': 'Languages',
            },
        ),
        migrations.CreateModel(
            name='Professors',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('professor_name', models.CharField(default=None, max_length=100)),
                ('professor_email', models.CharField(default=None, max_length=100)),
            ],
            options={
                'db_table': 'Professors',
            },
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('room_name', models.CharField(default=None, max_length=100)),
                ('room_capacity', models.IntegerField(default=None, max_length=100)),
                ('islab', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'Rooms',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default=None, max_length=100)),
                ('meetings_per_week', models.IntegerField(default=None)),
            ],
            options={
                'db_table': 'Semester',
            },
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start_time', models.CharField(default=None, max_length=100)),
                ('end_time', models.CharField(default=None, max_length=100)),
            ],
            options={
                'db_table': 'Time',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uId', models.CharField(max_length=20)),
                ('uName', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Semester_Courses',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Course', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Auto_Scheduler.Courses')),
                ('selected_Professor', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Auto_Scheduler.Professors')),
                ('semester', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Auto_Scheduler.Semester')),
            ],
            options={
                'db_table': 'Semester_Courses',
            },
        ),
        migrations.CreateModel(
            name='Day_Time_Professor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('day_time', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Auto_Scheduler.Day_Time')),
                ('prof', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Auto_Scheduler.Professors')),
            ],
            options={
                'db_table': 'Day_Time_Professor',
            },
        ),
        migrations.AddField(
            model_name='day_time',
            name='day',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Auto_Scheduler.Days'),
        ),
        migrations.AddField(
            model_name='day_time',
            name='time',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Auto_Scheduler.Time'),
        ),
        migrations.CreateModel(
            name='Courses_Professor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('course', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Auto_Scheduler.Courses')),
                ('prof', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Auto_Scheduler.Professors')),
            ],
            options={
                'db_table': 'Courses_Professor',
            },
        ),
    ]
